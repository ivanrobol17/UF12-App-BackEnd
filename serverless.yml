service: serverless-2024-prova
frameworkVersion: "3"
configValidationMode: warn

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iam:
    role: arn:aws:iam::058264440436:role/LabRole
  
  environment:
    DB_HOST: uf12-rds.cjucue2iqbwc.us-east-1.rds.amazonaws.com    
    DB_USER: admin    
    DB_PASSWORD: m3J5HAVaiF    
    DB_PORT: 3306    
    DB_NAME: Ospedale

  # httpApi:
  #   cors: true

functions:

  getAllPazienti:
    handler: src/ospedale.getAllPazienti
    events:
      - httpApi:
          path: /getAllPazienti
          method: get

  getPazientiNonDimessi:
    handler: src/ospedale.getPazientiNonDimessi
    events:
      - httpApi:
          path: /getPazientiNonDimessi
          method: get
  
  getPersone:
    handler: src/ospedale.getPersone
    events:
      - httpApi:
          path: /getPersone
          method: get
  
  getStati:
    handler: src/ospedale.getStati
    events:
      - httpApi:
          path: /getStati
          method: get

  ricercaPersone:
    handler: src/ospedale.ricercaPersone
    events:
      - httpApi:
          path: /ricercaPersone
          method: get

  getContatoriCuraAttesa:
    handler: src/ospedale.getContatoriCuraAttesa
    events:
      - httpApi:
          path: /getContatoriCuraAttesa
          method: get
      
  getPazientiById:
    handler: src/ospedale.getPazientiById
    events:
      - httpApi:
          path: /getPazientiById/{id}
          method: get

  CreatePaziente:
    handler: src/ospedale.CreatePaziente
    events:
      - httpApi:
          path: /CreatePaziente
          method: post

  UpdatePaziente:
    handler: src/ospedale.UpdatePaziente
    events:
      - httpApi:
          path: /UpdatePaziente/{id}
          method: put

  DeletePazienti:
    handler: src/ospedale.DeletePazienti
    events:
      - httpApi:
          path: /DeletePazienti/{id}
          method: delete

plugins:
  - serverless-offline
  - serverless-plugin-typescript